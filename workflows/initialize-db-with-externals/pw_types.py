# generated by datamodel-codegen:
#   filename:  psychonautwiki.json
#   timestamp: 2024-04-23T16:50:42+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class Class(BaseModel):
    chemical: Optional[List[str]]
    psychoactive: Optional[List[str]]


class Tolerance(BaseModel):
    full: str
    half: Optional[str]
    zero: Optional[str]


class Light(BaseModel):
    min: Optional[float]
    max: float


class Common(BaseModel):
    min: float
    max: float


class Strong(BaseModel):
    min: float
    max: Optional[float]


class Dose(BaseModel):
    units: str
    threshold: Optional[float]
    light: Optional[Light]
    common: Optional[Common]
    strong: Optional[Strong]
    heavy: Optional[float]


class Onset(BaseModel):
    min: Optional[float]
    max: Optional[int]
    units: str


class Comeup(BaseModel):
    min: Optional[float]
    max: Optional[float]
    units: str


class Peak(BaseModel):
    min: Optional[float]
    max: Optional[float]
    units: str


class Offset(BaseModel):
    min: Optional[float]
    max: Optional[float]
    units: str


class Total(BaseModel):
    min: Optional[float]
    max: Optional[float]
    units: str


class Afterglow(BaseModel):
    min: Optional[float]
    max: Optional[float]
    units: str


class Duration(BaseModel):
    onset: Optional[Onset]
    comeup: Optional[Comeup]
    peak: Optional[Peak]
    offset: Optional[Offset]
    total: Optional[Total]
    afterglow: Optional[Afterglow]


class Bioavailability(BaseModel):
    min: Optional[int]
    max: int


class Roa(BaseModel):
    name: str
    dose: Optional[Dose]
    duration: Optional[Duration]
    bioavailability: Optional[Bioavailability]


class UncertainInteraction(BaseModel):
    name: str


class UnsafeInteraction(BaseModel):
    name: str


class DangerousInteraction(BaseModel):
    name: str


class Effect(BaseModel):
    name: str
    url: str


class Substance(BaseModel):
    name: str
    commonNames: Optional[List[str]]
    url: str
    class_: Optional[Class] = Field(..., alias='class')
    tolerance: Optional[Tolerance]
    roas: List[Roa]
    addictionPotential: Optional[str]
    toxicity: Optional[List[str]]
    crossTolerances: Optional[List[str]]
    uncertainInteractions: Optional[List[UncertainInteraction]]
    unsafeInteractions: Optional[List[UnsafeInteraction]]
    dangerousInteractions: Optional[List[DangerousInteraction]]
    effects: List[Effect]


class Data(BaseModel):
    substances: List[Substance]


class Model(BaseModel):
    data: Data
