# Generated by ariadne-codegen
# Source: graphql/psychonautwiki/queries.graphql

from typing import Any, Dict, List, Optional, Union

from .all_substances import AllSubstances, PsychonautwikiSubstance
from .async_base_client import AsyncBaseClient
from .base_model import UNSET, UnsetType
from .get_substances import GetSubstances, GetSubstancesSubstances


def gql(q: str) -> str:
    return q


class Client(AsyncBaseClient):
    async def get_substances(
        self, name: Union[Optional[str], UnsetType] = UNSET, **kwargs: Any
    ) -> Optional[List[Optional[GetSubstancesSubstances]]]:
        query = gql(
            """
            query getSubstances($name: String) {
              substances(query: $name) {
                name
                summary
                url
                featured
                effects {
                  name
                  url
                }
                class {
                  chemical
                  psychoactive
                }
                tolerance {
                  full
                  half
                  zero
                }
                roas {
                  name
                  dose {
                    units
                    threshold
                    heavy
                    common {
                      min
                      max
                    }
                    light {
                      min
                      max
                    }
                    strong {
                      min
                      max
                    }
                  }
                  duration {
                    afterglow {
                      min
                      max
                      units
                    }
                    comeup {
                      min
                      max
                      units
                    }
                    duration {
                      min
                      max
                      units
                    }
                    offset {
                      min
                      max
                      units
                    }
                    onset {
                      min
                      max
                      units
                    }
                    peak {
                      min
                      max
                      units
                    }
                    total {
                      min
                      max
                      units
                    }
                  }
                  bioavailability {
                    min
                    max
                  }
                }
                images {
                  thumb
                  image
                }
                addictionPotential
                toxicity
                crossTolerances
                commonNames
                uncertainInteractions {
                  class {
                    psychoactive
                  }
                }
                unsafeInteractions {
                  class {
                    psychoactive
                  }
                }
                dangerousInteractions {
                  class {
                    psychoactive
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"name": name}
        response = await self.execute(
            query=query, operation_name="getSubstances", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return GetSubstances.model_validate(data).substances

    async def all_substances(
        self, **kwargs: Any
    ) -> Optional[List[Optional[PsychonautwikiSubstance]]]:
        query = gql(
            """
            query AllSubstances {
              substances(limit: 9999) {
                name
                commonNames
                url
                class {
                  chemical
                  psychoactive
                }
                tolerance {
                  full
                  half
                  zero
                }
                roas {
                  name
                  dose {
                    units
                    threshold
                    light {
                      min
                      max
                    }
                    common {
                      min
                      max
                    }
                    strong {
                      min
                      max
                    }
                    heavy
                  }
                  duration {
                    onset {
                      min
                      max
                      units
                    }
                    comeup {
                      min
                      max
                      units
                    }
                    peak {
                      min
                      max
                      units
                    }
                    offset {
                      min
                      max
                      units
                    }
                    total {
                      min
                      max
                      units
                    }
                    afterglow {
                      min
                      max
                      units
                    }
                  }
                  bioavailability {
                    min
                    max
                  }
                }
                addictionPotential
                toxicity
                crossTolerances
                uncertainInteractions {
                  name
                }
                unsafeInteractions {
                  name
                }
                dangerousInteractions {
                  name
                }
                effects {
                  name
                  url
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {}
        response = await self.execute(
            query=query, operation_name="AllSubstances", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return AllSubstances.model_validate(data).substances
