# generated by datamodel-codegen:
#   filename:  psychonautwiki.json
#   timestamp: 2024-06-01T10:52:12+00:00

from __future__ import annotations

from typing import List, Optional, Union

from pydantic import BaseModel, Field


class Error(BaseModel):
    message: str
    path: List[Union[int, str]]
    code: str


class Class(BaseModel):
    chemical: Optional[List[str]] = None
    psychoactive: Optional[List[str]] = None


class Tolerance(BaseModel):
    full: str
    half: Optional[str] = None
    zero: Optional[str] = None


class Light(BaseModel):
    min: Optional[float] = None
    max: Optional[float] = None


class Common(BaseModel):
    min: Optional[float] = None
    max: Optional[float] = None


class Strong(BaseModel):
    min: Optional[float] = None
    max: Optional[float] = None


class Dose(BaseModel):
    units: str
    threshold: Optional[float] = None
    light: Optional[Light] = None
    common: Optional[Common] = None
    strong: Optional[Strong] = None
    heavy: Optional[float] = None


class Onset(BaseModel):
    min: Optional[float] = None
    max: Optional[int] = None
    units: str


class Comeup(BaseModel):
    min: Optional[float] = None
    max: Optional[float] = None
    units: Optional[str] = None


class Peak(BaseModel):
    min: Optional[float] = None
    max: Optional[float] = None
    units: Optional[str] = None


class Offset(BaseModel):
    min: Optional[float] = None
    max: Optional[float] = None
    units: Optional[str] = None


class Total(BaseModel):
    min: Optional[float] = None
    max: Optional[float] = None
    units: str


class Afterglow(BaseModel):
    min: Optional[float] = None
    max: Optional[float] = None
    units: Optional[str] = None


class Duration(BaseModel):
    onset: Optional[Onset] = None
    comeup: Optional[Comeup] = None
    peak: Optional[Peak] = None
    offset: Optional[Offset] = None
    total: Optional[Total] = None
    afterglow: Optional[Afterglow] = None


class Bioavailability(BaseModel):
    min: Optional[int] = None
    max: int


class Roa(BaseModel):
    name: str
    dose: Optional[Dose] = None
    duration: Optional[Duration] = None
    bioavailability: Optional[Bioavailability] = None


class UncertainInteraction(BaseModel):
    name: str


class UnsafeInteraction(BaseModel):
    name: str


class DangerousInteraction(BaseModel):
    name: str


class Effect(BaseModel):
    name: str
    url: str


class Substance(BaseModel):
    name: str
    commonNames: Optional[List[str]] = None
    url: str
    class_: Optional[Class] = Field(..., alias='class')
    tolerance: Optional[Tolerance] = None
    roas: List[Roa]
    addictionPotential: Optional[str] = None
    toxicity: Optional[List[str]] = None
    crossTolerances: Optional[List[str]] = None
    uncertainInteractions: Optional[List[UncertainInteraction]] = None
    unsafeInteractions: Optional[List[UnsafeInteraction]] = None
    dangerousInteractions: Optional[List[DangerousInteraction]] = None
    effects: List[Effect]


class Data(BaseModel):
    substances: List[Substance]


class Model(BaseModel):
    errors: List[Error]
    data: Data
