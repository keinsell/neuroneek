# Generated by ariadne-codegen
# Source: graphql/psychonautwiki/queries.graphql

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel


class GetSubstances(BaseModel):
    substances: Optional[List[Optional["GetSubstancesSubstances"]]]


class GetSubstancesSubstances(BaseModel):
    name: Optional[str]
    summary: Optional[str]
    url: Optional[str]
    featured: Optional[bool]
    effects: Optional[List[Optional["GetSubstancesSubstancesEffects"]]]
    class_: Optional["GetSubstancesSubstancesClass"] = Field(alias="class")
    tolerance: Optional["GetSubstancesSubstancesTolerance"]
    roas: Optional[List[Optional["GetSubstancesSubstancesRoas"]]]
    images: Optional[List[Optional["GetSubstancesSubstancesImages"]]]
    addiction_potential: Optional[str] = Field(alias="addictionPotential")
    toxicity: Optional[List[Optional[str]]]
    cross_tolerances: Optional[List[Optional[str]]] = Field(alias="crossTolerances")
    common_names: Optional[List[Optional[str]]] = Field(alias="commonNames")
    uncertain_interactions: Optional[
        List[Optional["GetSubstancesSubstancesUncertainInteractions"]]
    ] = Field(alias="uncertainInteractions")
    unsafe_interactions: Optional[
        List[Optional["GetSubstancesSubstancesUnsafeInteractions"]]
    ] = Field(alias="unsafeInteractions")
    dangerous_interactions: Optional[
        List[Optional["GetSubstancesSubstancesDangerousInteractions"]]
    ] = Field(alias="dangerousInteractions")


class GetSubstancesSubstancesEffects(BaseModel):
    name: Optional[str]
    url: Optional[str]


class GetSubstancesSubstancesClass(BaseModel):
    chemical: Optional[List[Optional[str]]]
    psychoactive: Optional[List[Optional[str]]]


class GetSubstancesSubstancesTolerance(BaseModel):
    full: Optional[str]
    half: Optional[str]
    zero: Optional[str]


class GetSubstancesSubstancesRoas(BaseModel):
    name: Optional[str]
    dose: Optional["GetSubstancesSubstancesRoasDose"]
    duration: Optional["GetSubstancesSubstancesRoasDuration"]
    bioavailability: Optional["GetSubstancesSubstancesRoasBioavailability"]


class GetSubstancesSubstancesRoasDose(BaseModel):
    units: Optional[str]
    threshold: Optional[float]
    heavy: Optional[float]
    common: Optional["GetSubstancesSubstancesRoasDoseCommon"]
    light: Optional["GetSubstancesSubstancesRoasDoseLight"]
    strong: Optional["GetSubstancesSubstancesRoasDoseStrong"]


class GetSubstancesSubstancesRoasDoseCommon(BaseModel):
    min: Optional[float]
    max: Optional[float]


class GetSubstancesSubstancesRoasDoseLight(BaseModel):
    min: Optional[float]
    max: Optional[float]


class GetSubstancesSubstancesRoasDoseStrong(BaseModel):
    min: Optional[float]
    max: Optional[float]


class GetSubstancesSubstancesRoasDuration(BaseModel):
    afterglow: Optional["GetSubstancesSubstancesRoasDurationAfterglow"]
    comeup: Optional["GetSubstancesSubstancesRoasDurationComeup"]
    duration: Optional["GetSubstancesSubstancesRoasDurationDuration"]
    offset: Optional["GetSubstancesSubstancesRoasDurationOffset"]
    onset: Optional["GetSubstancesSubstancesRoasDurationOnset"]
    peak: Optional["GetSubstancesSubstancesRoasDurationPeak"]
    total: Optional["GetSubstancesSubstancesRoasDurationTotal"]


class GetSubstancesSubstancesRoasDurationAfterglow(BaseModel):
    min: Optional[float]
    max: Optional[float]
    units: Optional[str]


class GetSubstancesSubstancesRoasDurationComeup(BaseModel):
    min: Optional[float]
    max: Optional[float]
    units: Optional[str]


class GetSubstancesSubstancesRoasDurationDuration(BaseModel):
    min: Optional[float]
    max: Optional[float]
    units: Optional[str]


class GetSubstancesSubstancesRoasDurationOffset(BaseModel):
    min: Optional[float]
    max: Optional[float]
    units: Optional[str]


class GetSubstancesSubstancesRoasDurationOnset(BaseModel):
    min: Optional[float]
    max: Optional[float]
    units: Optional[str]


class GetSubstancesSubstancesRoasDurationPeak(BaseModel):
    min: Optional[float]
    max: Optional[float]
    units: Optional[str]


class GetSubstancesSubstancesRoasDurationTotal(BaseModel):
    min: Optional[float]
    max: Optional[float]
    units: Optional[str]


class GetSubstancesSubstancesRoasBioavailability(BaseModel):
    min: Optional[float]
    max: Optional[float]


class GetSubstancesSubstancesImages(BaseModel):
    thumb: Optional[str]
    image: Optional[str]


class GetSubstancesSubstancesUncertainInteractions(BaseModel):
    class_: Optional["GetSubstancesSubstancesUncertainInteractionsClass"] = Field(
        alias="class"
    )


class GetSubstancesSubstancesUncertainInteractionsClass(BaseModel):
    psychoactive: Optional[List[Optional[str]]]


class GetSubstancesSubstancesUnsafeInteractions(BaseModel):
    class_: Optional["GetSubstancesSubstancesUnsafeInteractionsClass"] = Field(
        alias="class"
    )


class GetSubstancesSubstancesUnsafeInteractionsClass(BaseModel):
    psychoactive: Optional[List[Optional[str]]]


class GetSubstancesSubstancesDangerousInteractions(BaseModel):
    class_: Optional["GetSubstancesSubstancesDangerousInteractionsClass"] = Field(
        alias="class"
    )


class GetSubstancesSubstancesDangerousInteractionsClass(BaseModel):
    psychoactive: Optional[List[Optional[str]]]


GetSubstances.model_rebuild()
GetSubstancesSubstances.model_rebuild()
GetSubstancesSubstancesRoas.model_rebuild()
GetSubstancesSubstancesRoasDose.model_rebuild()
GetSubstancesSubstancesRoasDuration.model_rebuild()
GetSubstancesSubstancesUncertainInteractions.model_rebuild()
GetSubstancesSubstancesUnsafeInteractions.model_rebuild()
GetSubstancesSubstancesDangerousInteractions.model_rebuild()
