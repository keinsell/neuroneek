//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "route_of_administration_dosage")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub intensivity: String,
    #[sea_orm(column_type = "Double")]
    pub amount_min: f64,
    #[sea_orm(column_type = "Double")]
    pub amount_max: f64,
    pub unit: String,
    #[sea_orm(column_name = "perKilogram")]
    pub per_kilogram: bool,
    #[sea_orm(column_name = "routeOfAdministrationId")]
    pub route_of_administration_id: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::substance_route_of_administration::Entity",
        from = "Column::RouteOfAdministrationId",
        to = "super::substance_route_of_administration::Column::Id",
        on_update = "Cascade",
        on_delete = "SetNull"
    )]
    SubstanceRouteOfAdministration,
}

impl Related<super::substance_route_of_administration::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SubstanceRouteOfAdministration.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
