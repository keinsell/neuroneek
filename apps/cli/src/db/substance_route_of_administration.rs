//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "substance_route_of_administration")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    #[sea_orm(column_name = "substanceName")]
    pub substance_name: String,
    pub name: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::route_of_administration_dosage::Entity")]
    RouteOfAdministrationDosage,
    #[sea_orm(has_many = "super::route_of_administration_phase::Entity")]
    RouteOfAdministrationPhase,
    #[sea_orm(
        belongs_to = "super::substance::Entity",
        from = "Column::SubstanceName",
        to = "super::substance::Column::Name",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    Substance,
}

impl Related<super::route_of_administration_dosage::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::RouteOfAdministrationDosage.def()
    }
}

impl Related<super::route_of_administration_phase::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::RouteOfAdministrationPhase.def()
    }
}

impl Related<super::substance::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Substance.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
