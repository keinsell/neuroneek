datasource db {
  provider     = "cockroachdb"
  url          = env("DATABASE_URL")
  relationMode = "foreignKeys"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex", "metrics", "tracing", "filteredRelationCount", "fieldReference", "multiSchema", "extendedWhereUnique", "views", "clientExtensions"]
}

model Account {
  id       String    @id @default(cuid())
  username String    @unique
  password String
  Subject  Subject[]
}

model Subject {
  id          String      @id @default(cuid())
  firstName   String?
  lastName    String?
  dateOfBirth DateTime?
  weight      Int?
  height      Int?
  account_id  String?     @unique
  account     Account?    @relation(fields: [account_id], references: [id])
  Ingestion   Ingestion[]
  Stash       Stash[]
}

model Substance {
  id                       String                  @id @default(cuid())
  name                     String                  @unique
  common_names             String[]
  brand_names              String[]
  substitutive_name        String?
  systematic_name          String?
  unii                     String?
  cas_number               String?
  inchi_key                String?
  iupac                    String?
  smiles                   String?
  psychoactive_class       String[]
  chemical_class           String?
  description              String?
  routes_of_administration RouteOfAdministration[]
  Ingestion                Ingestion[]
  Stash                    Stash[]
  SubstanceInteraction     SubstanceInteraction[]
}

model RouteOfAdministration {
  id              String     @id @default(cuid())
  substanceName   String?
  name            String
  bioavailability Float[]
  dosage_kind     String
  dosage          Dosage[]
  phases          Phase[]
  Substance       Substance? @relation(fields: [substanceName], references: [name])
}

model Phase {
  id                      String                 @id @default(cuid())
  from                    Int?
  to                      Int?
  RouteOfAdministration   RouteOfAdministration? @relation(fields: [routeOfAdministrationId], references: [id])
  routeOfAdministrationId String?
  effects                 Effect[]
}

model Dosage {
  id                      String                 @id @default(cuid())
  amount                  Float
  unit                    String
  perKilogram             Boolean                @default(false)
  RouteOfAdministration   RouteOfAdministration? @relation(fields: [routeOfAdministrationId], references: [id])
  routeOfAdministrationId String?
}

model Effect {
  id   String @id @default(cuid())
  name String @unique
  slug String @unique

  category String?
  type     String?
  tags     String[]

  summary     String?
  description String[]

  parameters String[]
  see_also   String[]

  effectindex    String?
  psychonautwiki String?
  Phase          Phase[]
}

model Ingestion {
  id                    String     @id @default(cuid())
  substanceName         String?
  routeOfAdministration String?
  dosage_unit           String?
  dosage_amount         Int?
  isEstimatedDosage     Boolean?   @default(false)
  date                  DateTime?
  subject_id            String?
  Subject               Subject?   @relation(fields: [subject_id], references: [id])
  Substance             Substance? @relation(fields: [substanceName], references: [name])
  Stash                 Stash?     @relation(fields: [stashId], references: [id])
  stashId               String?
}

model Stash {
  id           String      @id @default(cuid())
  owner_id     String
  Subject      Subject?    @relation(fields: [owner_id], references: [id])
  substance_id String
  Substance    Substance   @relation(fields: [substance_id], references: [name])
  addedDate    DateTime?   @default(now())
  expiration   DateTime?
  amount       Int?
  price        String?
  vendor       String?
  description  String?
  purity       Int?        @default(100)
  ingestions   Ingestion[]
}

model SubstanceInteraction {
  id          String     @id @default(cuid())
  Substance   Substance? @relation(fields: [substanceId], references: [id])
  substanceId String?
}
