datasource db {
  provider     = "cockroachdb"
  url          = env("DATABASE_URL")
  relationMode = "foreignKeys"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex", "metrics", "tracing", "multiSchema", "views", "postgresqlExtensions", "driverAdapters"]
}

model Account {
  id       String    @id @default(cuid())
  username String    @unique
  password String
  Subject  Subject[]
}

model Subject {
  id          String      @id @default(cuid())
  firstName   String?
  lastName    String?
  dateOfBirth DateTime?
  weight      Int?
  height      Int?
  account_id  String?     @unique
  account     Account?    @relation(fields: [account_id], references: [id])
  Ingestion   Ingestion[]
  Stash       Stash[]
}

// export enum RouteOfAdministrationClassification {
//   oral = 'oral',
//   sublingual = 'sublingual',
//   buccal = 'buccal',
//   insufflated = 'insufflated',
//   rectal = 'rectal',
//   transdermal = 'transdermal',
//   subcutaneous = 'subcutaneous',
//   intramuscular = 'intramuscular',
//   interavenous = 'interavenous',
//   smoked = 'smoked'
// }

enum RouteOfAdministrationClassification {
  oral
  sublingual
  buccal
  insufflated
  rectal
  transdermal
  subcutaneous
  intramuscular
  interavenous
  smoked
}

enum PsychoactiveClass {
  Stimulant
  Depressant
  Hallucinogen
  Dissociative
  Deliriant
  Entactogen
  Cannabinoid
  Opioid
  Inhalant
  Other

  @@map("psychoactive_class")
}

enum DosageIntensivity {
  THRESHOLD
  LIGHT
  COMMON
  STRONG
  HEAVY
}

model Substance {
  id                       String                  @id @default(cuid())
  name                     String                  @unique
  /// Common names are informal names for chemical compounds that are widely used in everyday language, but not necessarily scientifically accurate or consistent. They often reflect the historical or common usage of a compound, rather than its chemical structure or composition.
  common_names             String[]
  brand_names              String[]
  /// Substitutive name is a type of chemical nomenclature used for organic compounds. In this system, the substitutive name of a compound is based on the name of the parent hydrocarbon, with the functional group (such as an alcohol or a carboxylic acid) indicated by a prefix or suffix.
  substitutive_name        String?                 @unique
  systematic_name          String?                 @unique
  unii                     String?
  cas_number               String?                 @unique
  inchi_key                String?
  iupac                    String?
  smiles                   String?
  psychoactive_class       PsychoactiveClass[]
  chemical_class           String?
  description              String?
  routes_of_administration RouteOfAdministration[]
  Ingestion                Ingestion[]
  Stash                    Stash[]
  SubstanceInteraction     SubstanceInteraction[]
}

model RouteOfAdministration {
  id              String                              @id @default(cuid())
  substanceName   String?
  name            RouteOfAdministrationClassification
  bioavailability Float[]
  dosage          Dosage[]
  phases          Phase[]
  Substance       Substance?                          @relation(fields: [substanceName], references: [name])

  @@unique([name, substanceName])
}

model Phase {
  id                      String                 @id @default(cuid())
  from                    Int?
  to                      Int?
  RouteOfAdministration   RouteOfAdministration? @relation(fields: [routeOfAdministrationId], references: [id])
  routeOfAdministrationId String?
  effects                 Effect[]
}

model Dosage {
  id                      String                 @id @default(cuid())
  intensivity             DosageIntensivity
  amount_min              Float
  amount_max              Float
  unit                    String
  perKilogram             Boolean                @default(false)
  RouteOfAdministration   RouteOfAdministration? @relation(fields: [routeOfAdministrationId], references: [id])
  routeOfAdministrationId String?

  @@unique([intensivity, routeOfAdministrationId])
}

model Effect {
  id   String @id @default(cuid())
  name String @unique
  slug String @unique

  category String?
  type     String?
  tags     String[]

  summary     String?
  description String[]

  parameters String[]
  see_also   String[]

  effectindex    String?
  psychonautwiki String?
  Phase          Phase[]
}

model Ingestion {
  id                    String     @id @default(cuid())
  substanceName         String?
  routeOfAdministration String?
  dosage_unit           String?
  dosage_amount         Int?
  isEstimatedDosage     Boolean?   @default(false)
  date                  DateTime?
  subject_id            String?
  Subject               Subject?   @relation(fields: [subject_id], references: [id])
  Substance             Substance? @relation(fields: [substanceName], references: [name])
  Stash                 Stash?     @relation(fields: [stashId], references: [id])
  stashId               String?
}

model Stash {
  id           String      @id @default(cuid())
  owner_id     String
  Subject      Subject?    @relation(fields: [owner_id], references: [id])
  substance_id String
  Substance    Substance   @relation(fields: [substance_id], references: [name])
  addedDate    DateTime?   @default(now())
  expiration   DateTime?
  amount       Int?
  price        String?
  vendor       String?
  description  String?
  purity       Int?        @default(100)
  ingestions   Ingestion[]
}

model SubstanceInteraction {
  id          String     @id @default(cuid())
  Substance   Substance? @relation(fields: [substanceId], references: [id])
  substanceId String?
}
