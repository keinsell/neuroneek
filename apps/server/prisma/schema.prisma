// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
    provider = "cockroachdb"
    url      = env("DATABASE_URI")
}

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

model User {
    id            Int       @id @default(sequence())
    firstName     String?
    lastName      String?
    username      String?   @unique
    /// Stands for user's email.
    email         String?   @unique
    dateOfBirth   DateTime?
    weight        Int?
    height        Int?
    password      String
    publicRsaKey  String?
    /// In future we should not store private keys (even encrypted ones) in our database because of sensivity of information of our users. Even through we don't require personal information in our application.
    privateRsaKey String?
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @default(now())
}

model Ingestion {
    id                    String   @id @default(cuid())
    /// The date when the ingestion was performed.
    date                  DateTime
    /// Dosage in miligrams
    dosage                Float
    purity                Float?
    /// The route of administration of the substance.
    routeOfAdministration String
    /// Ingested substance
    substanceName         String

    // Aditional information
    purpose String?
    set     String?
    setting String?

    substance Substance @relation(fields: [substanceName], references: [name])
    Journal   Journal?  @relation(fields: [journalId], references: [id])
    journalId String?
}

model Journal {
    id        String      @id @default(cuid())
    ingestion Ingestion[]
}

model RouteOfAdministration {
    id              String  @id @default(cuid())
    type            String
    bioavailability Float?
    isRecommended   Boolean @default(false)

    // Dosages specific for such route of administration
    theresholdDosage Float
    lightDosage      Float
    commonDosage     Float
    strongDosage     Float
    heavyDosage      Float
    toxicDosage      Float?
    lethalDosage     Float?

    // Stage Durations
    onset        Int
    comeup       Int
    peak         Int
    offset       Int
    aftereffects Int

    substanceName String
    Substance     Substance @relation(fields: [substanceName], references: [name])
}

model Substance {
    id String @id @default(cuid())

    // General
    name String @unique

    // Chemical nomenclature
    commonNomenclature       String[]
    substitutiveNomenclature String
    systematicNomenclature   String

    // Substance Class
    chemicalClass     String
    psychoactiveClass String

    // Routes of administration
    routesOfAdministraton RouteOfAdministration[]

    // Ingestions of substance
    Ingestion Ingestion[]
}
