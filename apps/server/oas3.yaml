components:
    examples: {}
    headers: {}
    parameters: {}
    requestBodies: {}
    responses: {}
    schemas:
        UserProfileResponseDTO:
            properties:
                id:
                    type: string
                username:
                    type: string
                    description: 'Automatically generated username to identify user.'
                weight:
                    type: number
                    format: double
                height:
                    type: number
                    format: double
                dateOfBirth:
                    type: string
                    format: date-time
                ingestionCount:
                    type: number
                    format: double
                token:
                    type: string
            required:
                - id
                - username
                - ingestionCount
                - token
            type: object
            additionalProperties: false
        LoginUserResponseDTO:
            properties:
                id:
                    type: string
                username:
                    type: string
                    description: 'Automatically generated username to identify user.'
                weight:
                    type: number
                    format: double
                height:
                    type: number
                    format: double
                dateOfBirth:
                    type: string
                    format: date-time
                token:
                    type: string
            required:
                - id
                - username
                - token
            type: object
            additionalProperties: false
        ApplicationErrorDTO:
            properties:
                name:
                    type: string
                message:
                    type: string
                code:
                    type: number
                    format: double
            required:
                - name
                - message
                - code
            type: object
            additionalProperties: false
        LoginUserRequestDTO:
            properties:
                username:
                    type: string
                    example: k3kSy2kHww18_lqi
                recoveryKey:
                    type: string
                    example: IxvepKokzvEIaXdpkwxRA7WqnMCrSxWD
            required:
                - username
                - recoveryKey
            type: object
            additionalProperties: false
        RegisterUserReponseDTO:
            properties:
                id:
                    type: string
                username:
                    type: string
                    description: 'Automatically generated username to identify user.'
                weight:
                    type: number
                    format: double
                height:
                    type: number
                    format: double
                dateOfBirth:
                    type: string
                    format: date-time
                recoveryKey:
                    type: string
                    description: 'RecoveryKey is necessary key to interact with user account.'
                token:
                    type: string
                    description: JsonWebToken
            required:
                - id
                - username
                - recoveryKey
                - token
            type: object
            additionalProperties: false
    securitySchemes: {}
info:
    title: neuronek
    version: 1.0.0
    description: 'Documentation of ongoing API of application.'
    contact:
        name: 'Jakub Olan'
        email: keinsell@protonmail.com
openapi: 3.0.0
paths:
    /user:
        get:
            operationId: get-user
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserProfileResponseDTO'
            tags:
                - User
            security:
                -
                    jwt:
                        - user
            parameters: []
    /user/login:
        post:
            operationId: login-user
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginUserResponseDTO'
                            examples:
                                'Example 1':
                                    value: {id: clbxb2x0s0002pod51nbk1uob, username: T51GPDba7qwEnu73, token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNsYnhhejRuMDAxMDY3Z2Q1ejVjcXhuNjMiLCJ1c2VybmFtZSI6IlQ1MUdQRGJhN3F3RW51NzMiLCJpYXQiOjE2NzE2MDU4NzB9.9MblyhSFdtIlsGvz21OqEQGjx9fA7FC1dwsQL73rGZM}
                '400':
                    description: 'Bad Request'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApplicationErrorDTO'
                            examples:
                                'Example 1':
                                    value: {code: 400, message: 'Bad Request', name: BadRequestError}
            tags:
                - User
            security: []
            parameters: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginUserRequestDTO'
    /user/register:
        post:
            operationId: register-user
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterUserReponseDTO'
                            examples:
                                'Example 1':
                                    value: {username: T51GPDba7qwEnu73, recoveryKey: wESm3711FEGAlba74rGOAYzXtCdzSjdx, token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNsYnhhejRuMDAxMDY3Z2Q1ejVjcXhuNjMiLCJ1c2VybmFtZSI6IlQ1MUdQRGJhN3F3RW51NzMiLCJpYXQiOjE2NzE2MDU4NzB9.9MblyhSFdtIlsGvz21OqEQGjx9fA7FC1dwsQL73rGZM}
            tags:
                - User
            security: []
            parameters: []
servers:
    -
        url: /
tags:
    -
        name: User
        description: 'Operations about users'
        externalDocs:
            description: 'Find out more about users'
            url: 'http://swagger.io'
