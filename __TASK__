# Implementation of Collective Ingestion Insight

## Overview
Feature to display active substance ingestions with their current phases and amounts. The objective is to compute the combined subjective dosage by adjusting phase progression and tolerance.

## Actionable Sub-tasks (Ordered from Least Invasive to Most Complex)

1. Fixed Phase Coefficient Setup  
   - Confirm and document current fixed-value coefficients for each phase.

2. Dynamic Phase Coefficient Calculation  
   - Refactor to calculate phase coefficients using curve-based progression.
     * Onset: Linear progression.
     * Comeup: Exponential growth.
     * Peak: Plateau with slight decline.
     * Comedown: Logarithmic decay.
     * Afterglow: Linear decline.

3. Ingestion Effect Combination  
   - Modify the ingestion aggregation logic:
     * Calculate the effect for each ingestion using the dynamic coefficient.
     * Combine effects using a basic summation.

4. Visual Representation Enhancements  
   - Augment the output with ASCII charts for:
     * Current effect curve position.
     * Combined effect trajectory over time.
     * Predicted future dosage trends.

## Current System Analysis
- ✓ System already tracks individual ingestions with phases (Onset, Comeup, Peak, Comedown, Afterglow)
- ✓ Each ingestion has substance name, dosage, and timing information
- ✓ Phases are tracked with start/end times and durations
- ✓ Active phase detection is implemented
- ✓ Basic subjective dosage calculation based on phase coefficients

## Enhanced Subjective Effects Model Research

### Phase Impact Factors
Current simple multiplication factors:
- Onset: 0.2 (20% of full effect)
- Comeup: 0.6 (60% of full effect)
- Peak: 1.0 (100% of full effect)
- Comedown: 0.4 (40% of full effect)
- Afterglow: 0.1 (10% of full effect)

### Proposed Enhancements

1. Dynamic Phase Progression
- Instead of fixed coefficients, implement curve-based progression
- Calculate position within phase (0-100%)
- Use different curves for different phases:
  * Onset: Linear progression (0.0 -> 0.2)
  * Comeup: Exponential curve (0.2 -> 1.0)
  * Peak: Plateau with slight decline
  * Comedown: Logarithmic decay
  * Afterglow: Linear decline to zero

2. Multiple Ingestion Interaction
- Consider timing between ingestions
- Implement tolerance factors for repeated doses
- Account for cross-tolerance between similar substances
- Calculate combined subjective effect using:
  * Primary effects (current phase)
  * Residual effects (previous doses)
  * Tolerance adjustment

3. Substance-Specific Factors
- Different substances may have different progression curves
- Consider onset speed variations
- Account for different duration profiles
- Implement substance-specific tolerance patterns

## Implementation Priorities and Pseudo-code Reference

```rust
// Pseudo-code for dynamic phase coefficient calculation
fn calculate_phase_coefficient(phase: Phase, progress_percent: f64) -> f64 {
    match phase {
        Phase::Onset => progress_percent * 0.2,
        Phase::Comeup => 0.2 + (progress_percent * 0.8),
        Phase::Peak => 1.0 - (progress_percent * 0.1),
        Phase::Comedown => 0.4 * (1.0 - progress_percent),
        Phase::Afterglow => 0.1 * (1.0 - progress_percent),
    }
}

// Pseudo-code for multiple ingestion combination with tolerance adjustment
fn calculate_combined_effect(ingestions: Vec<Ingestion>) -> f64 {
    let mut total_effect = 0.0;
    let mut tolerance_factor = 1.0;
    
    for ingestion in ingestions.sort_by_time() {
        let phase_effect = calculate_phase_coefficient(
            ingestion.current_phase,
            ingestion.phase_progress
        );
        
        total_effect += ingestion.dosage * phase_effect * tolerance_factor;
        tolerance_factor *= 0.8; // Apply diminishing tolerance
    }
    
    total_effect
}
```

Visual Representation Example:
// ASCII chart for predicted effect trajectory
```
Effect Level (mg)
    ^
100 |    ****
 80 |   *    ****
 60 |  *         **
 40 | *             **
 20 |*                 **
  0 +--------------------->
    0h   1h   2h   3h   Time