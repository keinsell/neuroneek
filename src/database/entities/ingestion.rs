//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.4


use sea_orm::entity::prelude::*;
use serde::Deserialize;
use serde::Serialize;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "ingestion")]
pub struct Model
{
    #[sea_orm(primary_key)]
    pub id: i32,
    pub substance_name: String,
    pub route_of_administration: String,
    #[sea_orm(column_type = "Float")]
    pub dosage: f32,
    pub ingested_at: DateTime,
    pub updated_at: DateTime,
    pub created_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation
{
    #[sea_orm(has_many = "super::ingestion_phase::Entity")]
    IngestionPhase,
}

impl Related<super::ingestion_phase::Entity> for Entity
{
    fn to() -> RelationDef { Relation::IngestionPhase.def() }
}

impl ActiveModelBehavior for ActiveModel {}
