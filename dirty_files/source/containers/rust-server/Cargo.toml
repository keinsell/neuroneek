cargo-features = ["edition2024"]

[package]
name = "neuronek-server"
version = "0.1.0-dev"
authors = ["Jakub Olan <keinsell@protonmail.com>"]
edition = "2024"
autobins = true
readme = "README.md"
rust-version = "1.71.0"

[dependencies]
chrono = { version = "0.4.38", features = ["serde"] }
chrono-english = "0.1.7"
chrono-humanize = "0.2.3"
serde = { version = "1.0.203", features = ["derive"] }
serde_json = { version = "1.0.117", features = [
    "alloc",
    "preserve_order",
    "raw_value",
    "arbitrary_precision",
    "unbounded_depth",
] }
async-std = { version = "1.12.0", features = ["attributes"] }
rocket = { version = "^0.5.0-rc.2", features = [
    "json",
    "secrets",
    "tls",
    "mtls",
    "uuid",
] }
seaography = "1.0.0-rc.4"
ndb = { path = "./../../db/rust-seaorm-client", package = "neuronek-database-client" }
sea-orm = { version = "1.0.0-rc.4", features = [
    "sqlx-sqlite",
    "runtime-async-std-native-tls",
    "macros",
    "with-chrono",
    "with-json",
    "with-time",
    "with-time",
    "with-chrono",
    "with-json",
    "with-uuid",
    "with-rust_decimal",
    "with-bigdecimal",
] }
utoipa = { version = "4", features = ["rocket_extras", "chrono", "debug"] }
utoipa-scalar = { version = "*", features = ["rocket"] }
async-graphql = { version = "7.0.6", features = [
    "chrono",
    "chrono-tz",
    "chrono-duration",
    "tempfile",
    "dynamic-schema",
    "playground",
] }
async-graphql-rocket = { version = "7.0.6" }

[dependencies.rocket_db_pools]
version = "0.2.0"
features = ["sqlx_sqlite"]

[dependencies.sqlx]
version = "0.7.0"
default-features = false
features = ["macros", "migrate"]

[[bin]]
name = "neuronek-server"
path = "src/main.rs"
required-features = []

[dev-dependencies]
serial_test = "3.1.1"
rstest = "0.21.0"
insta = { version = "1.34.0", features = ["redactions", "yaml", "filters"] }
